df_sondage <- df_sondage[,-1]
#Renommage colonne
df_sondage <- df_sondage %>% rename(Categorie_Socio = Dans.quelle.catÃ.gorie.socio.professionnelle.vous.situez.vous..,
Sexe = Quel.est.votre.sexe..,
Age = Quel.est.votre.date.de.naissance..,
Enfant = Avez.vous.des.enfants..,
Permis_Conduire = Avez.vous.le.permis.de.conduire..,
Zone_Habitation = OÃ¹.habitez.vous..,
Etude = Quel.est.votre.niveau.dâ..Ã.tude..,
Frequence_VTC = Ã..quelle.frÃ.quence.utilisez.vous.les.VTC....Uber..Taxi....,
Image_Voiture = Quelle.image.avez.vous.de.votre.voiture..,
Choix_VA = Instinctivement..Ãªtes.vous.plutÃ.t.pour.ou.contre.les.voitures.autonomes..,
IA = Savez.vous.ce.que.câ..est.que.lâ..intelligence.artificielle..I.A....,
Confiance_Tech = ÃŠtes.vous.prÃªts.Ã..faire.confiance.Ã..la.technologie.pour.vous.assister.dans.votre.conduite.ou.vous.transporter..,
Question_Test = Veuillez.rÃ.pondre.Â..Un.peu.Â..Ã..cette.question.,
Distinction_VA = Selon.vous..les.voitures.autonomes.devraient.elles.avoir.une.distinction.particuliÃ.re.afin.de.les.reconnaÃ.tre.sur.le.rÃ.seau.automobile..,
Surete_VA = En.admettant.que.sur.le.rÃ.seau.routier..il.y.ait.6.accidents.mortels.par.milliard.de.Km.parcourus..Pour.que.vous.acceptiez.que.les.voitures.autonomes.soient.lÃ.galisÃ.es..il.faudrait.que.ce.chiffre.soit..,
Monter_VA = Admettons.qu.une.sociÃ.tÃ..X.sorte.son.nouveau.vÃ.hicule.autonome..rÃ.putÃ..plus.fiable.que.l.Ãªtre.humain..Vous.ferez.parti.des.premiers.utilisateurs.de.cette.voiture..monteriez.vous.dedans..,
Activite_VA = Une.fois.dans.une.voiture.autonome..que.ferez.vous..,
Partage_VA = Seriez.vous.prÃªt.Ã..partager.ce.type.de.voiture.avec.des.inconnus.lors.de.vos.trajets....Comme.dans.les.transports.en.commun.,
Google_VA = Google.a.pour.objectif.de.ne.pas.mettre.de.volant..ni.de.pÃ.dale.dans.ces.voitures..Juste.un.bouton.dâ..arrÃªt.dâ..urgence..ÃŠtes.vous.d.accord.avec.cela..,
Securite = Classer.de.1.Ã..7..1...secondaire..7...prioritaire.....vos.attentes.pour.le.vÃ.hicule.de.demain....Tous.types.de.voitures...La.sÃ.curitÃ..,
Environnement = Classer.de.1.Ã..7..1...secondaire..7...prioritaire.....vos.attentes.pour.le.vÃ.hicule.de.demain....Tous.types.de.voitures...L.impact.environnemental.,
Plaisir_Conduite = Classer.de.1.Ã..7..1...secondaire..7...prioritaire.....vos.attentes.pour.le.vÃ.hicule.de.demain....Tous.types.de.voitures...Le.plaisir.de.conduire.,
Cout = Classer.de.1.Ã..7..1...secondaire..7...prioritaire.....vos.attentes.pour.le.vÃ.hicule.de.demain....Tous.types.de.voitures...Le.coÃ.t.,
Necessite = Classer.de.1.Ã..7..1...secondaire..7...prioritaire.....vos.attentes.pour.le.vÃ.hicule.de.demain....Tous.types.de.voitures...Une.nÃ.cessitÃ..,
liberte = Classer.de.1.Ã..7..1...secondaire..7...prioritaire.....vos.attentes.pour.le.vÃ.hicule.de.demain....Tous.types.de.voitures...La.libertÃ..,
Statut_Social = Classer.de.1.Ã..7..1...secondaire..7...prioritaire.....vos.attentes.pour.le.vÃ.hicule.de.demain....Tous.types.de.voitures...Le.statut.social.,
Futur_Automobile = ConsidÃ.rez.vous.que.le.futur.de.l.automobile.passe.par.les.voitures.autonomes..,
Achat_VA = Si.un.jour..le.prix.des.voitures.autonomes.correspond.Ã..votre.budget.actuel.pour.vos.vÃ.hicules.et.que.leurs.sÃ.retÃ.s.a.Ã.tÃ..testÃ.es.et.approuvÃ.es...achÃ.teriez.vous.une.voiture.autonome..,
Commentaire = Merci.pour.le.temps.que.vous.avez.consacrÃ..Ã..cette.enquÃªte..Si.vous.avez.des.commentaires..des.remarques....Vous.pouvez.les.laisser.ci.dessous..Si.vous.avez.des.questions.auxquelles.vous.voulez.avoir.une.rÃ.ponse..envoyez.moi.plutÃ.t.un.mail.)
#Suppression de 2 colonnes inutiles
df_sondage <- df_sondage[,-31]
df_sondage <- df_sondage[,-30]
#Filtres sur la question test
df_sondage <- df_sondage[(df_sondage$Question_Test == "4" | df_sondage$Question_Test == "Un peu"),]
load(file='./data/df_RegLog.RData')
# categerie socio Professionnel
Socio <- table(df_RegLog$Categorie_Socio)
lbls <- paste(names(Socio), "\n", Socio, sep="")
pie(Socio, labels = lbls,
main="Répartition de l'échantillon en fonciton de la catégorie socio-professionnelle")
# Visualisation des données
pacman::p_load('ggplot2')
# Manipulation des données
pacman::p_load("dplyr")
# categerie socio Professionnel
Socio <- data.frame(df_RegLog$Categorie_Socio)
View(Socio)
fig <- plot_ly(df_RegLog$Categorie_Socio)
pacman::p_load('plotly')
fig <- plot_ly(df_RegLog$Categorie_Socio)
fig <- plot_ly(df_RegLog)
fig <- plot_ly(df_RegLog, labels = ~Categorie_Socio, values = ~X1960, type = 'pie')
fig
fig <- plot_ly(df_RegLog, labels = ~Categorie_Socio, values = df_RegLog$Categorie_Socio, type = 'pie')
fig
fig <- fig %>% layout(title = 'Répartition des différentes catégories socio-proffesionnelle')
fig
fig <- plot_ly(df_RegLog, labels = ~Categorie_Socio, values = ~Categorie_Socio, type = 'pie')
fig <- fig %>% layout(title = 'Répartition des différentes catégories socio-proffesionnelle')
fig
source('~/Maxime Chauveau/Master Medas/Mémoire/Analyse_Sondage/script/Analyse_RegLog.R', encoding = 'UTF-8')
levels(df_sondage$Categorie_Socio)
options(encoding = "UTF-8")
labels = c('Agriculteur','Artisan','Autres',"Cadre ou profession intellectuelle supÃ©rieure",'Chef d\'entreprise',
'Demandeur d\'emploi', 'Employe','Etudiant, lycéen','Ouvrier','Profession intermédiaire',
'Profession libérale','Retraité')
fig <- plot_ly(df_RegLog, labels = labels, values = ~Categorie_Socio, type = 'pie')
fig <- fig %>% layout(title = 'Répartition des différentes catégories socio-proffesionnelle')
fig
fig <- plot_ly(df_RegLog, labels = labels, values = ~Categorie_Socio, type = 'pie')
fig <- fig %>% layout(title = 'Répartition des différentes catégories socioproffesionnelles')
fig
fig <- plot_ly(df_RegLog, labels = Categorie_Socio, values = ~Categorie_Socio, type = 'pie')
fig <- fig %>% layout(title = 'Répartition des différentes catégories socioproffesionnelles')
fig
fig <- plot_ly(df_RegLog, labels = ~Categorie_Socio, values = ~Categorie_Socio, type = 'pie')
fig <- fig %>% layout(title = 'Répartition des différentes catégories socioproffesionnelles')
fig
#levels(df_sondage$Sexe)
freq(df_sondage$Sexe)
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Age)
fig <- fig %>% layout(barmode = "overlay")
fig
View(df_RegLog)
source('~/Maxime Chauveau/Master Medas/Mémoire/Analyse_Sondage/script/Analyse_RegLog.R', encoding = 'UTF-8')
install.packages("pacman")
freq(df_RegLog$Zone_Habitation)
options(encoding = "UTF-8")
install.packages('pacman')
pacman::p_load('pacman')
pacman::p_load('corrplot')
# MASS pour la fonction stepAIC
pacman::p_load('MASS')
# Visualisation des données
pacman::p_load('ggplot2')
pacman::p_load('plotly')
# Manipulation des données
pacman::p_load('dplyr')
load(file='./data/df_RegLog.RData')
View(df_RegLog)
freq(df_RegLog$Zone_Habitation)
#Analyse stat
pacman::p_load('questionr')
freq(df_RegLog$Zone_Habitation)
freq(df_RegLog$Choix_VA)
fig <- plot_ly(df_RegLog, values = ~Distinction_VA, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
fig <- plot_ly(df_RegLog,labels = ~Categorie_Socio, values = ~Distinction_VA, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
fig <- plot_ly(df_RegLog,labels = ~Distinction_VA, values = ~Distinction_VA, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
fig <- plot_ly(df_RegLog, labels = ~Distinction_VA, values = ~Distinction_VA, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
fig <- plot_ly(df_RegLog, labels = ~Categorie_Socio, values = ~Categorie_Socio, type = 'pie')
fig <- fig %>% layout(title = 'Répartition des différentes catégories socioproffesionnelles')
fig
freq(df_RegLog$Choix_VA)
Choix_VA <- freq(df_RegLog$Choix_VA)
View(Choix_VA)
# Distinction VA
fig <- plot_ly(df_RegLog, values = ~Choix_VA, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
fig <- plot_ly(Choix_VA, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
fig <- plot_ly(Distinction_VA, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
freq(df_RegLog$Distinction_VA)
fig <- plot_ly(Distinction_VA, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
Distinction_VA <- freq(df_RegLog$Distinction_VA)
# Distinction VA
fig <- plot_ly(Distinction_VA, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
View(Choix_VA)
# confiance technologie VA
Confiance_Tech <- freq(df_RegLog$Confiance_Tech)
fig <- plot_ly(Confiance_Tech, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
View(Confiance_Tech)
Confiance_Tech$Labels <- c('Non', 'Oui mais dans certaines conditions (parking, embouteillages)', 'Oui dans toutes les conditions de circulation')
fig <- plot_ly(Confiance_Tech, values = ~n, label = ~Labels , type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
fig <- plot_ly(Confiance_Tech, values = ~n, labels = ~Labels , type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
fig <- plot_ly(Confiance_Tech, values = ~n, labels = ~Labels , type = 'pie')
fig <- fig %>% layout(title = 'Répartition de la confiance accordées aux technologies pour la conduite')
fig
fig <- plot_ly(Confiance_Tech, values = ~n, labels = ~Labels , type = 'pie')
fig <- fig %>% layout(title = 'Répartition de la confiance accordées aux technologies concernant la conduite')
fig
# Surete VA
Surete_VA <- freq(df_RegLog$Surete_VA)
View(Surete_VA)
Surete_VA$Labels <- c('Légèrement plus haut', 'Égal', '2 fois plus bas', '5 fois plus bas', '10 fois plus bas')
Surete_VA <- freq(df_RegLog$Surete_VA)
Surete_VA$Labels <- c('Légèrement plus haut', 'Égal', '2 fois plus bas', '5 fois plus bas', '10 fois plus bas')
fig <- plot_ly(Surete_VA, values = ~n, labels = ~Labels , type = 'pie')
fig <- fig %>% layout(title = 'Répartition de la sureté des voitures autonomes')
fig
fig <- plot_ly(Surete_VA, values = ~n, labels = ~Labels , type = 'pie')
fig <- fig %>% layout(title = 'Avis sur le niveau de sureté des voitures autonomes par rapport aux humains')
fig
# Google
Google_VA <- freq(df_RegLog$Google_VA)
fig <- plot_ly(Google_VA, values = ~n , type = 'pie')
fig <- fig %>% layout(title = 'Avis sur le niveau de sureté des voitures autonomes par rapport aux humains')
fig
fig <- plot_ly(y=Google_VA$n, histfunc='sum', type = "histogram")
fig <- fig %>% layout(yaxis=list(type='linear'))
fig
View(Google_VA)
Google_VA$Labels <- c('1', '2', '3', '4', '5', '6', '7')
fig <- plot_ly(y=Google_VA$n, x=Google_VA$Labels , histfunc='sum', type = "histogram")
fig <- fig %>% layout(yaxis=list(type='linear'))
fig
fig <- plot_ly(Google_VA, values = ~n, labels = ~Labels , histfunc='sum', type = "histogram")
fig <- fig %>% layout(yaxis=list(type='linear'))
fig
fig <- plot_ly(
x = Google_VA$n,
y = Google_VA$Labels,
name = "SF Zoo",
type = "bar"
)
fig
fig <- plot_ly(
y = Google_VA$n,
x = Google_VA$Labels,
name = "SF Zoo",
type = "bar"
)
fig
fig <- plot_ly(
y = Google_VA$n,
x = Google_VA$Labels,
name = "SF Zoo",
type = "bar",
text = google$%
)
fig
fig <- plot_ly(
y = Google_VA$n,
x = Google_VA$Labels,
name = "SF Zoo",
type = "bar",
text = Google_VA$`val%`
)
fig
fig <- plot_ly(
y = Google_VA$n,
x = Google_VA$Labels,
name = "SF Zoo",
type = "bar",
text = Google_VA$`val%`,
textposition = 'auto'
)
fig
fig <- plot_ly(
y = Google_VA$n,
x = Google_VA$Labels,
name = "SF Zoo",
type = "bar",
text = Google_VA$`val%`,
textposition = 'auto',
)
fig <- fig %>%layout(title = 'Positionnement par rapport au choix de Google')
fig
# categerie socio Professionnel
Categorie_Socio <- freq(df_RegLog$Categorie_Socio)
fig <- plot_ly(Categorie_Socio, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'Choix sur la distinction des voitures autonomes')
fig
Categorie_Socio$Labels <- c('Agriculteur', 'Artisan', 'Chef d\'entreprise', 'Profession libérale', 'Cadre ou profession intellectuelle supérieure',
'Profession intermédiaire', 'Employé', 'Ouvrier', 'Retraité', 'Demandeur d\'emploi',
'Étudiant, lycéen', 'Autres')
fig <- plot_ly(Categorie_Socio, values = ~n, labels = ~Labels, type = 'pie')
fig <- fig %>% layout(title = 'Répartition des différentes catégories socioprofessionnelles')
fig
View(Socio)
View(Categorie_Socio)
# categerie socio Professionnel
Categorie_Socio <- freq(df_RegLog$Categorie_Socio)
load(file='./data/df_RegLog.RData')
#Conversion en num
df_RegLog[] <- lapply(df_RegLog, function(x) {
if(is.factor(x)) as.numeric(as.character(x)) else x
})
#Matrice de corélation
mcor <- cor(df_RegLog)
corrplot(mcor, type="upper", order="hclust", tl.col="black", tl.srt=45)
load(file='./data/df_RegLog.RData')
#Conversion en num
df_RegLog[] <- lapply(df_RegLog, function(x) {
if(as.numeric(x)) as.factor(x) else x
})
df_RegLog$Age <- as.numeric(df_RegLog$Age)
###############################
### Statistique Descriptive ###
###############################
# categerie socio Professionnel
Categorie_Socio <- freq(df_RegLog$Categorie_Socio)
Categorie_Socio$Labels <- c('Agriculteur','Demandeur d\'emploi', 'Étudiant, lycéen', 'Artisan', 'Chef d\'entreprise', 'Profession libérale', 'Cadre ou profession intellectuelle supérieure',
'Profession intermédiaire', 'Employé', 'Ouvrier', 'Retraité',
'Autres')
View(Categorie_Socio)
Categorie_Socio <- freq(df_RegLog$Categorie_Socio)
Categorie_Socio$Labels <- c('Agriculteur','Demandeur d\'emploi', 'Étudiant, lycéen', 'Autres', 'Artisan', 'Chef d\'entreprise', 'Profession libérale', 'Cadre ou profession intellectuelle supérieure',
'Profession intermédiaire', 'Employé', 'Ouvrier', 'Retraité',
)
fig <- plot_ly(Categorie_Socio, values = ~n, labels = ~Labels, type = 'pie')
fig <- fig %>% layout(title = 'Répartition des différentes catégories socioprofessionnelles')
fig
Categorie_Socio$Labels <- c('Agriculteur','Demandeur d\'emploi', 'Étudiant, lycéen', 'Autres', 'Artisan', 'Chef d\'entreprise', 'Profession libérale', 'Cadre ou profession intellectuelle supérieure',
'Profession intermédiaire', 'Employé', 'Ouvrier', 'Retraité')
fig <- plot_ly(Categorie_Socio, values = ~n, labels = ~Labels, type = 'pie')
fig <- fig %>% layout(title = 'Répartition des différentes catégories socioprofessionnelles')
fig
df_test <- df_RegLog
modelSature <- glm(formula = Choix_VA ~ Categorie_Socio + Sexe+ Age + Enfant + Permis_Conduire +
Zone_Habitation + Etude + Frequence_VTC + Image_Voiture + Distinction_VA + Surete_VA +
Monter_VA + Partage_VA,
family = binomial,
data = df_RegLog, maxit = 100)
summary(modelSature)
stepAIC(modelSature)
# MASS pour la fonction stepAIC
pacman::p_load('MASS')
stepAIC(modelSature)
modelretenu <- glm(formula = Choix_VA ~ Categorie_Socio + Sexe + Permis_Conduire +
Zone_Habitation + Frequence_VTC + Distinction_VA + Monter_VA,
family = binomial, data = df_RegLog, maxit = 100)
summary(modelretenu)
modelretenu <- glm(formula = Choix_VA ~ Categorie_Socio + Sexe + Permis_Conduire +
Zone_Habitation + Frequence_VTC + Distinction_VA + Monter_VA + Achat_VA,
family = binomial, data = df_RegLog, maxit = 100)
modelSature <- glm(formula = Choix_VA ~ Categorie_Socio + Sexe+ Age + Enfant + Permis_Conduire +
Zone_Habitation + Etude + Frequence_VTC + Image_Voiture + Distinction_VA + Surete_VA +
Monter_VA + Partage_VA,
family = binomial,
data = df_RegLog, maxit = 100)
summary(modelSature)
stepAIC(modelSature)
modelretenu <- glm(formula = Choix_VA ~ Categorie_Socio + Sexe + Permis_Conduire +
Zone_Habitation + Frequence_VTC + Distinction_VA + Monter_VA,
family = binomial, data = df_RegLog, maxit = 100)
summary(modelretenu)
modelSature <- glm(formula = Choix_VA ~ Sexe+ Age + Enfant + Permis_Conduire +
Zone_Habitation + Etude + Frequence_VTC + Image_Voiture + Distinction_VA + Surete_VA +
Monter_VA + Partage_VA,
family = binomial,
data = df_RegLog, maxit = 100)
summary(modelSature)
suppressWarnings(forest_model(modelretenu))
#Représentation graphique du modèle
pacman::p_load('forestmodel')
suppressWarnings(forest_model(modelretenu))
#Distance de Cook
pacman::p_load('car')
infIndexPlot(modelretenu, vars = 'Cook', id = TRUE, grid = TRUE, main = 'Les points influents')
infIndexPlot(modelretenu, vars = 'Cook', id = TRUE, grid = TRUE, main = 'Les points influents')
stepAIC(modelretenu)
modelretenu <- glm(formula = Choix_VA ~ Categorie_Socio + Sexe + Permis_Conduire +
Zone_Habitation + Frequence_VTC + Distinction_VA + Monter_VA,
family = binomial, data = df_RegLog, maxit = 100)
stepAIC(modelretenu)
summary(modelretenu)
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Categorie_Socio[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Categorie_Socio[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay")
fig
pacman::p_load('corrplot')
# MASS pour la fonction stepAIC
pacman::p_load('MASS')
# Visualisation des données
pacman::p_load('ggplot2')
pacman::p_load('plotly')
# Manipulation des données
pacman::p_load('dplyr')
#Analyse stat
pacman::p_load('questionr')
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Categorie_Socio[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Categorie_Socio[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay")
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Sexe[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Sexe[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay")
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Permis_Conduire[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Permis_Conduire[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay")
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Zone_Habitation[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Zone_Habitation[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay")
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Frequence_VTC[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Frequence_VTC[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay")
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Age[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Age[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay")
fig
modelSature <- glm(formula = Choix_VA ~ Categorie_Socio + Sexe+ Age + Enfant + Permis_Conduire +
Zone_Habitation + Etude + Frequence_VTC + Image_Voiture,
family = binomial,
data = df_RegLog, maxit = 100)
summary(modelSature)
stepAIC(modelSature)
modelretenu <- glm(formula = Choix_VA ~ Sexe + Permis_Conduire + Frequence_VTC,
family = binomial, data = df_RegLog, maxit = 100)
summary(modelretenu)
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Frequence_VTC[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Frequence_VTC[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay")
fig
modelSature <- glm(formula = Choix_VA ~ Categorie_Socio + Sexe+ Age + Enfant + Permis_Conduire +
Zone_Habitation + Etude + Frequence_VTC + Image_Voiture+Securite + Environnement +
Plaisir_Conduite + Cout + Necessite + liberte + Statut_Social,
family = binomial,
data = df_RegLog, maxit = 100)
summary(modelSature)
glm(formula = Choix_VA ~ Categorie_Socio + Sexe + Age + Enfant +
Permis_Conduire + Zone_Habitation + Etude + Frequence_VTC +
Image_Voiture + Securite + Environnement + Plaisir_Conduite +
Cout + Necessite + liberte + Statut_Social, family = binomial,
data = df_RegLog, maxit = 100)
testmodel <- glm(formula = Choix_VA ~ Categorie_Socio + Sexe + Age + Enfant +
Permis_Conduire + Zone_Habitation + Etude + Frequence_VTC +
Image_Voiture + Securite + Environnement + Plaisir_Conduite +
Cout + Necessite + liberte + Statut_Social, family = binomial,
data = df_RegLog, maxit = 100)
modelSature <- glm(formula = Choix_VA ~ Categorie_Socio + Sexe+ Age + Enfant + Permis_Conduire +
Zone_Habitation + Etude + Frequence_VTC + Image_Voiture,
family = binomial,
data = df_RegLog, maxit = 100)
summary(modelSature)
stepAIC(modelSature)
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Sexe[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Sexe[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay")
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Sexe[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Sexe[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay", title = 'Avis sur les voitures autonomes autonomes en fonction du sexe')
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Permis_Conduire[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Permis_Conduire[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay", title = 'Avis sur les voitures autonomes autonomes en fonction du permis de conduire')
fig
summary(modelretenu)
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Frequence_VTC[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Frequence_VTC[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay")
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Frequence_VTC[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Frequence_VTC[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay", title = 'Avis sur les voitures autonomes autonomes en fonction de la fréquence d\'utilisatoin des VTC')
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Sexe[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Sexe[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay", title = 'Avis sur les voitures autonomes en fonction du sexe')
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Permis_Conduire[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Permis_Conduire[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay", title = 'Avis sur les voitures autonomes en fonction du permis de conduire')
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Frequence_VTC[df_RegLog$Choix_VA == 0], name = 'Contre')
fig <- fig %>% add_histogram(x = df_RegLog$Frequence_VTC[df_RegLog$Choix_VA == 1], name = 'Pour')
fig <- fig %>% layout(barmode = "overlay", title = 'Avis sur les voitures autonomes en fonction de la fréquence d\'utilisation des VTC')
fig
View(df_RegLog)
names(df_RegLog)
options(encoding = "UTF-8")
#install.packages('pacman')
pacman::p_load('pacman')
pacman::p_load('corrplot')
# MASS pour la fonction stepAIC
pacman::p_load('MASS')
# Visualisation des données
pacman::p_load('ggplot2')
pacman::p_load('plotly')
# Manipulation des données
pacman::p_load('dplyr')
#Analyse stat
pacman::p_load('questionr')
#Représentation graphique du modèle
pacman::p_load('forestmodel')
#Distance de Cook
pacman::p_load('car')
# confiance technologie VA
Confiance_Tech <- freq(df_RegLog$Confiance_Tech)
Confiance_Tech$Labels <- c('Non', 'Oui mais dans certaines conditions (parking, embouteillages)', 'Oui dans toutes les conditions de circulation')
fig <- plot_ly(Confiance_Tech, values = ~n, labels = ~Labels , type = 'pie')
fig <- fig %>% layout(title = 'Répartition de la confiance accordées aux technologies concernant la conduite')
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Permis_Conduire[df_RegLog$Confiance_Tech == 0], name = 'Non')
fig <- fig %>% add_histogram(x = df_RegLog$Permis_Conduire[df_RegLog$Confiance_Tech == 1], name = 'Oui mais')
fig <- fig %>% add_histogram(x = df_RegLog$Permis_Conduire[df_RegLog$Confiance_Tech == 2], name = 'Oui')
#fig <- fig %>% layout(barmode = "overlay", title = 'Avis sur les voitures autonomes en fonction de la fréquence d\'utilisation des VTC')
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Enfant[df_RegLog$Confiance_Tech == 0], name = 'Non')
fig <- fig %>% add_histogram(x = df_RegLog$Enfant[df_RegLog$Confiance_Tech == 1], name = 'Oui mais')
fig <- fig %>% add_histogram(x = df_RegLog$Enfant[df_RegLog$Confiance_Tech == 2], name = 'Oui')
#fig <- fig %>% layout(barmode = "overlay", title = 'Avis sur les voitures autonomes en fonction de la fréquence d\'utilisation des VTC')
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Zone_Habitation[df_RegLog$Confiance_Tech == 0], name = 'Non')
fig <- fig %>% add_histogram(x = df_RegLog$Zone_Habitation[df_RegLog$Confiance_Tech == 1], name = 'Oui mais')
fig <- fig %>% add_histogram(x = df_RegLog$Zone_Habitation[df_RegLog$Confiance_Tech == 2], name = 'Oui')
#fig <- fig %>% layout(barmode = "overlay", title = 'Avis sur les voitures autonomes en fonction de la fréquence d\'utilisation des VTC')
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = df_RegLog$Etude[df_RegLog$Confiance_Tech == 0], name = 'Non')
fig <- fig %>% add_histogram(x = df_RegLog$Etude[df_RegLog$Confiance_Tech == 1], name = 'Oui mais')
fig <- fig %>% add_histogram(x = df_RegLog$Etude[df_RegLog$Confiance_Tech == 2], name = 'Oui')
#fig <- fig %>% layout(barmode = "overlay", title = 'Avis sur les voitures autonomes en fonction de la fréquence d\'utilisation des VTC')
fig
